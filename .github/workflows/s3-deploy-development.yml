name: Deploy docs to S3 development
on:
  push:
    branches:
      - develop
jobs:
  run:
    runs-on: ubuntu-latest
    environment: development
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Copy markdown files
        run: |
          mkdir -p build/md
          cp -r versioned_docs/version-3.0/* build/md/

      - name: Deploy CloudFront function
        run: |
          aws cloudfront create-function \
            --name docs-routing \
            --function-config Comment="Handle MD and HTML routing",Runtime=cloudfront-js-1.0 \
            --function-code fileb://cloudfront-function.js || \
          aws cloudfront update-function \
            --name docs-routing \
            --function-config Comment="Handle MD and HTML routing",Runtime=cloudfront-js-1.0 \
            --function-code fileb://cloudfront-function.js

      - name: Publish CloudFront function
        run: |
          aws cloudfront publish-function --name docs-routing

      - name: Deploy to S3
        uses: reggionick/s3-deploy@v4
        with:
          folder: build
          bucket: ${{ secrets.S3_BUCKET }}
          bucket-region: ${{ secrets.S3_BUCKET_REGION }}
          dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          invalidation: /*
          delete-removed: true
          private: true
          files-to-include: '{.*/**,**}'

      - name: Update CloudFront distribution
        run: |
          aws cloudfront get-distribution-config --id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --region ${{ secrets.S3_BUCKET_REGION }} > dist-config.json
          jq '.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items += [{"EventType": "viewer-request", "FunctionARN": "'$(aws cloudfront describe-function --name docs-routing --query 'FunctionSummary.FunctionARN' --output text)'"}]' dist-config.json > new-config.json
          ETAG=$(jq -r '.ETag' dist-config.json)
          aws cloudfront update-distribution --id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --distribution-config file://new-config.json --if-match $ETAG --region ${{ secrets.S3_BUCKET_REGION }}
